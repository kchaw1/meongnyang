<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmcat.repository.mapper.FriendMapper">
	<resultMap id="memberMap" type="Member">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="pass" property="pass"/>
		<result column="email" property="email"/>
		<result column="category" property="category"/>
		<result column="image_name" property="imageName"/>
		<result column="image_path" property="imagePath"/>
		<result column="image_size" property="imageSize"/>
		<result column="grade_name" property="gradeName"/>
	</resultMap>
	
	<select id="selectAllMembersOnePage" parameterType="int" resultMap="memberMap">
		select * from mn_member
		 where type = '1'
		 order by name desc
		 limit #{begin}, 12
	</select>
	
	<select id="selectAllMembersOneLine" parameterType="int" resultMap="memberMap">
		select m.* , c.code_name grade_name
		  from mn_member m
		  inner join mn_code c
			 on m.grade_no = c.each_code
		  where type= '1'
		  order by id desc
		 limit #{lineBegin}, 4
	</select>
	
	<select id="selectCntAllMembers" resultType="int">
		select count(*) from mn_member
		 where type = '1'
	</select>
	
	<resultMap id="friendMap" type="Friend">
		<result column="friend_no" property="friendNo"/>
		<result column="friends_id" property="friendsId"/>
		<result column="caller_id" property="callerId"/>
		<result column="callee_id" property="calleeId"/>
		<result column="call_date" property="callDate"/>
		<result column="answer_date" property="answerDate"/>
	</resultMap>
	
	<insert id="insertNewRequest" parameterType="Friend">
		insert into mn_friend(
			caller_id, callee_id, call_date
		) values(
			#{callerId}, #{calleeId}, #{callDate}
		)
	</insert>
	
	<update id="updateFirstAnswer" parameterType="Friend" >
		update mn_friend
		   set answer_date = #{answerDate},
		       answer = #{answer}
		 where caller_id = #{callerId} and
		 	   callee_id = #{calleeId} and
		 	   answer_date is null
	</update>
	
	<select id="selectRequestCnt" parameterType="string" resultType="int">
		select count(*) from mn_friend
		 where callee_id = #{calleeId} and
			   answer_date is null
	</select>
	
	<select id="selectCallerList" parameterType="string" resultType="string">
		select caller_id 
		  from mn_friend
		 where callee_id = #{calleeId} and
		       answer_date is null
	</select>
	
	<select id="selectAllFriendsList" parameterType="string" resultType="string">
		(select caller_id as friends_id 
			 from mn_friend where callee_id=#{userId} 
										and answer='y')
		union
		(select callee_id as friends_id
			 from mn_friend where caller_id=#{userId} 
										and answer='y')
	</select>
	<select id="selectFriendsListOnePage" parameterType="Friend" resultMap="friendMap">
		(select caller_id as friends_id, 
			call_date from mn_friend where callee_id=#{userId} 
										and answer='y')
		union
		(select callee_id as friends_id, 
			call_date from mn_friend where caller_id=#{userId} 
										and answer='y')
		order by call_date
		limit #{begin}, 12
	</select>
	
	<select id="selectAllFriendsOneLine" parameterType="Friend" resultType="string">
		(select caller_id as friends_id 
			from mn_friend where callee_id = #{userId} 
										and answer='y')
		union
		(select callee_id as friends_id 
			from mn_friend where caller_id = #{userId} 
										and answer='y')
		limit #{lineBegin}, 4
	</select>
	
	<select id="selectFriendInfoByIdList" parameterType="Member" resultMap="memberMap">
		select m.* , c.code_name grade_name
		  from mn_member m
		  inner join mn_code c
			 on m.grade_no = c.each_code
		  where id in <foreach item ="friendId" collection="FriendIdList"
     	 						open="(" separator="," close=")">
     	 					#{friendId}
     	 			   </foreach>
	</select>
	

</mapper>