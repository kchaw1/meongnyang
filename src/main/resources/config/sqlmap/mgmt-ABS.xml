<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmcat.repository.mapper.MgmtABSMapper">
<resultMap id="memberMap" type="Member">
		<result column="no" property="no" />
		<result column="id" property="id" />
		<result column="type" property="type" />
		<result column="pass" property="pass" />
		<result column="category" property="category" />
		<result column="email" property="email" />
		<result column="abs_like_count" property="absLikeCount" />
		<result column="grade_no" property="gradeNo" />
		<result column="image_name" property="imageName" />
		<result column="image_path" property="imagePath" />
		<result column="image_size" property="imageSize" />
		<result column="sign_up_date" property="signUpDate" />
		<result column="login_state" property="loginState" />
		<result column="auth_state" property="authState" />
		<result column="greetings" property="greetings" />
		<result column="point" property="point" />
		<result column="login_date_time" property="loginDateTime" />
</resultMap>

<resultMap id="comMap" type="CommunityBoard">
		<result column="com_no" property="comNo" />
		<result column="com_title" property="comTitle" />
		<result column="com_writer" property="comWriter" />
		<result column="com_content" property="comContent" />
		<result column="com_category" property="comCategory" />
		<result column="com_rec_cnt" property="comRecCnt" />
		<result column="com_view_cnt" property="comViewCnt" />
		<result column="com_reg_date" property="comRegDate" />
</resultMap>

<resultMap id="careerMap" type="Career">
		<result column="career_no" property="careerNo" />
		<result column="id" property="id" />
		<result column="career_start" property="careerStart" />
		<result column="career_end" property="careerEnd" />
		<result column="career_content" property="careerContent" />
</resultMap>

<resultMap id="licenseMap" type="License">
		<result column="license_no" property="licenseNo" />
		<result column="id" property="id" />
		<result column="lif_sys_name" property="lifSysName" />
		<result column="lif_path" property="lifPath" />
		<result column="lif_ori_name" property="lifOriName" />
		<result column="lif_size" property="lifSize" />
</resultMap>

<resultMap id="commentMap" type="CommunityComment">
		<result column="comc_no" property="comcNo" />
		<result column="comc_writer" property="comcWriter" />
		<result column="com_no" property="comNo" />
		<result column="comc_content" property="comcContent" />
		<result column="comc_reg_date" property="comcRegDate" />
		<result column="comc_ref" property="comcRef" />
		<result column="comc_parent_no" property="comcParentNo" />
</resultMap>

<!-- 전문가 리스트 -->
<select id="selectABSList" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by no asc 
</select>

<!-- 오름차순 정렬 -->
<select id="selectABSListSortedbyId" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by id asc  
</select>
<select id="selectABSListSortedbyName" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by name asc   
</select>
<select id="selectABSListSortedbySignUpDate" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by sign_up_date asc 
</select>
<select id="selectABSListSortedbyRecentLoginDate" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by login_date_time asc 
</select>
<select id="selectABSListSortedbyScore" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by score asc 
</select>
<select id="selectABSListSortedbyPoint" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by point asc 
</select>
<!-- /오름차순정렬 -->

<!-- 내림차순정렬 -->
<select id="selectABSListDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by no desc  
</select>

<select id="selectABSListSortedbyIdDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by id desc   
</select>
<select id="selectABSListSortedbyNameDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by name desc   
</select>
<select id="selectABSListSortedbySignUpDateDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by sign_up_date desc   
</select>
<select id="selectABSListSortedbyRecentLoginDateDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by login_date_time desc
</select>
<select id="selectABSListSortedbyScoreDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by score desc 
</select>
<select id="selectABSListSortedbyPointDesc" parameterType="Member" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE type = 2 and auth_state = #{authState}
	 order by point desc  
</select>
<!-- /내림차순 정렬 -->

<!-- 디테일 -->
<select id="selectABSDetail" parameterType="int" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 WHERE no = #{no}
</select>

<!-- 작성한 게시글 -->
<select id="selectBoardById" parameterType="string" resultMap="comMap">
	select *
	  from mn_com
	 where com_writer = #{comWriter} 
</select>

<!-- 작성한 코멘트 -->
<select id="selectCommentById" parameterType="string" resultMap="commentMap">
	select *
	  from mn_com_comment
	 where comc_writer = #{comcWriter}
</select>

<!-- 승인 -->
<update id="authApprove" parameterType="int">
	update mn_member
	   set auth_state = 'y'
     where no = #{no}	   
</update>

<!-- 경력조회 -->
<select id="selectCareerById" parameterType="string" resultMap="careerMap">
	select *
	  from mn_member_career
	 where id = #{id}
</select>

<!-- 탈퇴처리 -->
<delete id="deleteMember" parameterType="int">
	delete from mn_member
		  where no = #{no}
</delete>

<!-- 검색 -->
<select id="searchABS" parameterType="MgmtSearch" resultMap="memberMap">
	SELECT *
	  FROM mn_member AS A 
	  LEFT JOIN (select login_id, max(login_date_time) login_date_time
				   from mn_login_history
				  group by login_id) AS B
	    ON A.id = B.login_id
	 <where>
	 	type='2' and auth_state = #{authState}
	 	<choose>
	 		<when test="searchType==0">
	 			and no like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==1">
	 			and id like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==2">
	 			and name like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==3">
	 			and sign_up_date like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==4">
	 			and login_date_time like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==5">
	 			and score like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<otherwise>
	 			and point like CONCAT('%',#{keyword},'%')
	 		</otherwise>
	 	</choose>
	 </where>
	 order by ${sortColumn} ${sortMethod} 
</select> 

<!-- 자격증 파일이름 호출 -->
<select id="selectLicenceOriName" parameterType="string" resultMap="licenseMap">
	select *
	  from mn_member_license
	 where id = #{id}  
</select>



</mapper>