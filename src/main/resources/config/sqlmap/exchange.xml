<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cityfarmer.repository.mapper.ExchangeMapper">

	<resultMap id="boardMap" type="ExchangeBoard">
		<result column="ex_no" property="exNo"/>
		<result column="ex_title" property="exTitle"/>
		<result column="ex_content" property="exContent"/>
		<result column="ex_reg_date" property="exRegDate"/>
		<result column="ex_complete" property="exComplete"/>
		<result column="ex_view_cnt" property="exViewCnt"/>
	</resultMap>
	
	<resultMap id="fileMap" type="ExchangeFile">
		<result column="exf_no" property="exfNo"/>
		<result column="ex_no" property="exNo"/>
		<result column="exf_ori_name" property="exfOriName"/>
		<result column="exf_sys_name" property="exfSysName"/>
		<result column="exf_path" property="exfPath"/>
		<result column="exf_size" property="exfSize"/>
	</resultMap>
	
	<insert id="insertNewBoard" parameterType="ExchangeBoard">
		<selectKey keyProperty="exNo" resultType="int" order="BEFORE">
			select cf_s_exchange_no.nextval from dual
		</selectKey>
		insert into cf_exchange (
			ex_no, writer, ex_title, ex_content, ex_reg_date
		) values (
			#{exNo}, #{writer}, #{exTitle}, #{exContent} , #{exRegDate}
		)
	</insert>
	
	<insert id="insertNewFile" parameterType="ExchangeFile">
		<!-- <selectKey keyProperty="exNo" resultType="int" order="BEFORE">
			select cf_s_exchang_no.nextval from dual
		</selectKey> -->
		insert into cf_exchange_file (
			exf_no, ex_no, exf_ori_name, exf_sys_name, exf_path, exf_size
		) values (
			cf_s_exf_no.nextval, #{exNo}, #{exfOriName}, #{exfSysName}, #{exfPath}, #{exfSize}
		)
	</insert>
	
	<!-- 페이징 하려고 selectAll 하는 것 -->
	<select id="selectAllBoard" parameterType="ExchangeBoard" resultMap="boardMap">
		select *
  		from (select rownum rnum, a.* 
		  		from (  select * 
				  		  from cf_exchange
				  		order by ex_no desc) a
				where rownum &lt;= #{end})
		where rnum &gt;= #{begin}
	</select>
	
	<!-- 전체 게시물 수 -->
	<select id="selectBoardCount" resultType="int">
		select count(*)
		  from cf_exchange
	</select>
	
	<select id="selectFileByExNo" parameterType="int" resultMap="fileMap">
		select * from cf_exchange_file
			where ex_no = #{exNo}
	</select>
	
	<select id="selectBoardByExNo" parameterType="int" resultMap="boardMap">
		select * from cf_exchange
		   where ex_no = #{exNo}
	</select>
	
	<update id="updateBoard" parameterType="ExchangeBoard">
		update cf_exchange
			set ex_title = #{exTitle},
				ex_content = #{exContent}
			where ex_no = #{exNo}	
	</update>
	
	<delete id="deleteBoard" parameterType="int">
		delete from cf_exchange
			where ex_no = #{exNo}
	</delete>
	
	<!-- 게시글 조회수 증가를 위한 작성 비교 -->
	<select id="selectBoardCountByWriterAndExNo" parameterType="ViewCnt" resultType="int">
		select count(*)
		  from cf_exchange
		 where ex_no = #{exNo}
		   and writer = #{id}
	</select>
	
	<update id="updateViewCnt" parameterType="int">
		update cf_exchange
		  set ex_view_cnt = ex_view_cnt + 1
		 where ex_no = #{exNo}
	</update>
	
	<!-- 거래완료 yes로 바꾸는 쿼리 -->
	<update id="updateY" parameterType="int">
		update cf_exchange
		   set ex_complete = 'y'
		 where ex_no = #{exNo}
	</update>
	
	<!-- 거래완료 no로 바꾸는 쿼리 -->
	<update id="updateN" parameterType="int">
		update cf_exchange
		   set ex_complete = 'n'
		 where ex_no = #{exNo}
	</update>
	
	<!-- 제목으로 검색 -->
	<select id="selectBoardByTitle" parameterType="SearchVO" resultMap="boardMap">
		select *
  		from (select rownum rnum, a.* 
		  		from (  select * 
				  		  from cf_exchange 
				  		 where ex_title like '%' || #{keyword} || '%'
				  		order by ex_no desc) a
				where rownum &lt;= #{end})
		where rnum &gt;= #{begin}
	</select>
	<!-- 제목으로 검색 게시물 수 -->
	<select id="selectBoardCountByTitle" parameterType="SearchVO" resultType="int">
		select count(*)
		  from cf_exchange
		where ex_title like '%' || #{keyword} || '%'
	</select>
	
	<!-- 작성자로 검색 -->
	<select id="selectBoardByWriter" parameterType="SearchVO" resultMap="boardMap">
		select *
  		from (select rownum rnum, a.* 
		  		from (  select * 
				  		  from cf_exchange 
				  		 where writer like '%' || #{keyword} || '%'
				  		order by ex_no desc) a
				where rownum &lt;= #{end})
		where rnum &gt;= #{begin}
	</select>
	
	<select id="selectBoardCountByWriter" parameterType="SearchVO" resultType="int">
		select count(*)
		  from cf_exchange
		where writer like '%' || #{keyword} || '%'
	</select>
	
	<resultMap id="commentMap" type="ExchangeComment">
		<result column="ex_no" property="exNo"/>
		<result column="exc_no" property="excNo"/>
		<result column="exc_writer" property="excWriter"/>
		<result column="exc_content" property="excContent"/>
		<result column="exc_reg_date" property="excRegDate"/>
		<result column="exc_ref" property="excRef"/>
		<result column="exc_parent_no" property="excParentNo"/>	
	</resultMap>
	
	<!-- 댓글 작성 -->
	<insert id="insertNewComment" parameterType="ExchangeComment">
		insert into cf_exchange_comment (
			exc_no, ex_no, exc_writer, exc_content, exc_reg_date
		) values (
			cf_s_exc_no.nextval, #{exNo}, #{excWriter}, #{excContent}, #{excRegDate}
		)
	</insert>
	
	<!-- 게시글 번호에 대한 모든 댓글 list -->
	<select id="selectCommentListByExNo" parameterType="int" resultMap="commentMap">
		select * from cf_exchange_comment
			where ex_no = #{exNo}
		  order by exc_reg_date
	</select>
	
	<!-- 댓글 수 조회 -->
	<select id="selectCommentCount" parameterType="int" resultType="int">
		select count(*)
		  from cf_exchange_comment
		  where ex_no = #{exNo}
	</select>
	
	<!-- <select id="selectOneComment" parameterType="int" resultMap="commentMap">
		select exc_content
		  from cf_exchange_comment
		 where exc_no = #{excNo}
	</select> -->
	
	<!-- 댓글 삭제 -->
	<delete id="deleteComment" parameterType="int">
		delete from cf_exchange_comment
			where exc_no = #{excNo}
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="ExchangeComment">
		update cf_exchange_comment
		   set exc_content = #{excContent}
		  where exc_no = #{excNo}
	</update>
	
	<!-- 답글 등록(계층 쿼리를 위한 ref, parent_no 등록 -->
	<insert id="insertReply" parameterType="ExchangeComment">
		<selectKey keyProperty="excNo" resultType="int" order="BEFORE">
			select cf_s_exc_no.nextval from dual
		</selectKey>
		insert into cf_exchange_comment (
			exc_no, ex_no, exc_writer, exc_content, exc_ref, exc_parent_no
		) values (
			#{excNo}, #{exNo}, #{excWriter}, #{excContent}, #{excRef}, #{excParentNo}
		)
	</insert>
	
	<!-- 댓글과 답글 모두 가져오기..(계층 쿼리 적용) 등록순...-->
	<select id="selectAllReplyOrderByRegister" parameterType="int" resultMap="commentMap">
		select *
		  from cf_exchange_comment
		  where ex_no = #{exNo}
		  start with exc_parent_no = 0		  
		connect by prior exc_no = exc_parent_no
		  order siblings by exc_ref desc
		
	</select>
	
	<!-- 댓글과 답글 모두 가져오기..(계층 쿼리 적용) 최신순...-->
	<select id="selectAllReplyOrderByDate" parameterType="int" resultMap="commentMap">
		select *
		  from cf_exchange_comment
		  where ex_no = #{exNo}
		  start with exc_parent_no = 0		  
		connect by prior exc_no = exc_parent_no
		  order siblings by exc_reg_date desc
		
	</select>
</mapper>

























