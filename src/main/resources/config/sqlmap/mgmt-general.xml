<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmcat.repository.mapper.MgmtGeneralMapper">
<resultMap id="memberMap" type="Member">
		<result column="no" property="no" />
		<result column="id" property="id" />
		<result column="type" property="type" />
		<result column="pass" property="pass" />
		<result column="category" property="category" />
		<result column="email" property="email" />
		<result column="abs_like_count" property="absLikeCount" />
		<result column="grade_no" property="gradeNo" />
		<result column="image_name" property="imageName" />
		<result column="image_path" property="imagePath" />
		<result column="image_size" property="imageSize" />
		<result column="sign_up_date" property="signUpDate" />
		<result column="login_state" property="loginState" />
		<result column="auth_state" property="authState" />
		<result column="greetings" property="greetings" />
		<result column="point" property="point" />
		<result column="login_date_time" property="loginDateTime" />
		<result column="code_name" property="codeName" />
</resultMap>

<resultMap id="comMap" type="CommunityBoard">
		<result column="com_no" property="comNo" />
		<result column="com_title" property="comTitle" />
		<result column="com_writer" property="comWriter" />
		<result column="com_content" property="comContent" />
		<result column="com_category" property="comCategory" />
		<result column="com_rec_cnt" property="comRecCnt" />
		<result column="com_view_cnt" property="comViewCnt" />
		<result column="com_reg_date" property="comRegDate" />
</resultMap>

<resultMap id="commentMap" type="CommunityComment">
		<result column="comc_no" property="comcNo" />
		<result column="comc_writer" property="comcWriter" />
		<result column="com_no" property="comNo" />
		<result column="comc_content" property="comcContent" />
		<result column="comc_reg_date" property="comcRegDate" />
		<result column="comc_ref" property="comcRef" />
		<result column="comc_parent_no" property="comcParentNo" />
</resultMap>

<!-- 일반회원 리스트 -->
<select id="selectGeneralList" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY no asc;
</select>

<!-- 오름차순 정렬 -->
<select id="selectGeneralListSortedbyId" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY id asc;
</select>
<select id="selectGeneralListSortedbyName" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY name asc;
</select>
<select id="selectGeneralListSortedbySignUpDate" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY sign_up_date asc;
</select>
<select id="selectGeneralListSortedbyRecentLoginDate" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY login_date_time asc;
</select>
<select id="selectGeneralListSortedbyScore" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY score asc;
</select>
<select id="selectGeneralListSortedbyPoint" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY point asc;
</select>
<select id="selectGeneralListSortedbyGrade" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY grade_no asc;
</select>   
<!-- /오름차순정렬 -->

<!-- 내림차순정렬 -->
<select id="selectGeneralListDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY no desc;
</select>
<select id="selectGeneralListSortedbyIdDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY id desc;
</select>
<select id="selectGeneralListSortedbyNameDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY name desc;
</select>
<select id="selectGeneralListSortedbySignUpDateDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY sign_up_date desc;
</select>
<select id="selectGeneralListSortedbyRecentLoginDateDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY login_date_time desc;
</select>
<select id="selectGeneralListSortedbyScoreDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY score desc;
</select>
<select id="selectGeneralListSortedbyPointDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY point desc;
</select>
<select id="selectGeneralListSortedbyGradeDesc" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
    ORDER BY grade_no desc;
</select>    
<!-- /내림차순 정렬 -->

<!-- 검색 -->
<select id="selectSearchGeneralList" parameterType="MgmtSearch" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
    WHERE type = 1   
	 	<choose>
	 		<when test="searchType==0">
	 			and no like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==1">
	 			and id like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==2">
	 			and name like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==3">
	 			and sign_up_date like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==4">
	 			and login_date_time like CONCAT('%',#{keyword},'%')
	 		</when>
	 		<when test="searchType==5">
	 			and score = #{keyword}
	 		</when>
	 		<when test="searchType==6">
	 			and point = #{keyword}
	 		</when>
	 		<otherwise>
	 			and code_name like CONCAT('%',#{keyword},'%')
	 		</otherwise>
	 	</choose>
	 ORDER BY ${sortColumn} ${sortMethod} 
</select>

<!-- 디테일 -->
<select id="selectGeneralDetail" parameterType="int" resultMap="memberMap">
	SELECT *
  	 FROM mn_member as A
  	INNER JOIN (select login_id, max(login_date_time) login_date_time
			      from mn_login_history
			     group by login_id) AS B
	   ON A.id = B.login_id
    INNER JOIN (select each_code, code_name
				from mn_code) AS C
	   ON A.grade_no = C.each_code
	WHERE no = #{no}
</select>

<!-- 작성한 게시글 -->
<select id="selectBoardById" parameterType="string" resultMap="comMap">
	select *
	  from mn_com
	 where com_writer = #{comWriter} 
</select>

<!-- 작성한 코멘트 -->
<select id="selectCommentById" parameterType="string" resultMap="commentMap">
	select *
	  from mn_com_comment
	 where comc_writer = #{comcWriter}
</select>

<!-- 탈퇴처리 -->
<delete id="deleteMember" parameterType="int">
	delete from mn_member
		  where no = #{no}
</delete>

<!-- 포인트지급 -->
<update id="updatePoint" parameterType="Member">
	update mn_member
	   set point = point + #{point}
	 where no = #{no}
</update>

<!-- 지급내역 -->
<insert id="insertPointHistory" parameterType="PointPlus">
	insert into mn_point_plus(id, plus_point, plus_type)
	     values(#{id}, #{plusPoint}, '2')
</insert>

</mapper>